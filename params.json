{
  "name": "Safenote",
  "tagline": "Text editor with AES128 encryption",
  "body": "# safenote\r\n###### Text editor with AES128 encryption\r\n\r\n## About\r\nSafenote was born when a friend of mine showed me that has a file(.doc) with all passwords on a usb stick, I am horrified.\r\nSo I explored some alternatives to improve the security of passwords.\r\n* Microsoft Word + password: It could be a good idea, but...\r\n  * Needs a MicrosoftWord installation on your computer.\r\n  * MicrosoftWord create a backup and cache file when open a documents, the possible leaks\r\n  * Too many tools for recovery a password.\r\n* TrueCrypt or Veracrypt archive: better than first, but...\r\n  * Many MB used when installed in portable mode.\r\n  * Need Administrator privileges\r\n\r\n**Note**:Veracrypt it's the best application for store different kind of data securely\r\n\r\n:bowtie: *Than I chosen to write a simple text editor that can encrypt and decrypt text.* :bowtie:\r\n\r\n## Why you should choose *safenote* instead other?\r\n  1. **Lightweight** (less than 12MB for Windows, 18MB for Linux)\r\n  2. **Secure** (the sensitive text will be stored only in ram)\r\n  3. **Secure^2** (AES128-CBC)\r\n  4. **Secure^3** (you can not recover the password, so be careful not to lose it)\r\n  \r\n## How to run from code\r\n\r\n### Requirements\r\n * python2.7\r\n * pyqt4\r\n * pycrypto\r\n \r\n### safenote source\r\nDownload source\r\n\r\n```\r\ngit clone https://github.com/gioditalia/safenote.git\r\ncd safenote\r\npython run_safenote.py\r\n```",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}